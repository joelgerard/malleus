# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from malleus.api.domain.protos import timings_pb2 as malleus_dot_api_dot_domain_dot_protos_dot_timings__pb2
from malleus.api.service.protos import bench_service_pb2 as malleus_dot_api_dot_service_dot_protos_dot_bench__service__pb2


class BenchServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.bench_datastore = channel.unary_unary(
        '/malleus.api.service.BenchService/bench_datastore',
        request_serializer=malleus_dot_api_dot_service_dot_protos_dot_bench__service__pb2.BenchRequest.SerializeToString,
        response_deserializer=malleus_dot_api_dot_domain_dot_protos_dot_timings__pb2.Timings.FromString,
        )


class BenchServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def bench_datastore(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BenchServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'bench_datastore': grpc.unary_unary_rpc_method_handler(
          servicer.bench_datastore,
          request_deserializer=malleus_dot_api_dot_service_dot_protos_dot_bench__service__pb2.BenchRequest.FromString,
          response_serializer=malleus_dot_api_dot_domain_dot_protos_dot_timings__pb2.Timings.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'malleus.api.service.BenchService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
